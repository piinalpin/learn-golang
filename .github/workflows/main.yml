name: Build

on:
  create:
    tags:
      - '*.*.*'

env:
  OUTPUT_FILIENAME: sewa-space-core
  TARGET_OS: linux
  TARGET_ARCH: amd64

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - id: current_date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
      - run: echo $CURRENT_DATE
        env:
          CURRENT_DATE: ${{ steps.current_date.outputs.date }}
      - run: echo "APP_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - name: Build binary
        run: env CGO_ENABLED=0 GOOS=$TARGET_OS GOARCH=$TARGET_ARCH go build -o ./bin/$OUTPUT_FILIENAME -ldflags="-X 'main.buildVersion=$APP_VERSION' -X 'main.buildDate=$CURRENT_DATE'"
      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker images
        uses: docker/build-push-action@v2
        with:
          file: ./build/Dockerfile
          context: .
          push: true
          tags: piinalpin/learn-goapp:latest, piinalpin/learn-goapp:${{ env.APP_VERSION }}
          build-args: APP_NAME=${{ env.OUTPUT_FILIENAME }}
  archive:
    runs-on: ubuntu-18.04
    needs: build
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.29
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: '1.18.3'
          project_path: './'
          binary_name: ${{ env.OUTPUT_FILIENAME }}
          extra_files: README.md
          asset_name: ${{ env.OUTPUT_FILIENAME }}-${{ env.APP_VERSION }}.${{ matrix.goos }}-${{ matrix.goarch }}
  deploy:
    runs-on: ubuntu-18.04
    needs: archive
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: sewa-space
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          env_file: dev.env
        env:
          DATASOURCE_NAME: ${{secrets.DATASOURCE_NAME}}
          DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
          DATASOURCE_URL: ${{secrets.DATASOURCE_URL}}
          DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}
          REDIS_HOST: ${{secrets.REDIS_HOST}}
          REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}
          REDIS_USER: ${{secrets.REDIS_USER}}